{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAoBhD,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,YCPnBG,EAAc,SAAC,GAAwB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAItC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BACMA,K,uBCRDK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAWF,GAF9C,+DAIAG,MAAMR,GAJN,cAIbS,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAZnB,kBAgBZY,GAhBY,4CAAH,sDCEXK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEhBrB,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KA0B1C,OAnBAC,qBAAU,WAERjB,EAASC,GACJiB,MAAK,SAACC,GAEHC,YAAY,WAERJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAGd,UAKV,CAACb,IAEGc,EDrB6BM,CAAcpB,GAAlCU,EAJqB,EAI3BJ,KAAcO,EAJa,EAIbA,QAStB,OACI,oCACI,4BAAKb,GAEHa,GAAW,sCAEb,yBAAKjB,UAAU,aAGPc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIY,IAAMZ,EAAIhB,IACLgB,UEzBpBa,EAAe,WAAO,IAAD,EAEI3C,mBAAS,CAAC,cAFd,mBAEzB4C,EAFyB,KAEb7C,EAFa,KAIhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEM6C,EAAWf,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,U,MCXlDwB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.fb737dec.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { PropTypes } from 'prop-types'   \r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        //console.log( e.target.value )\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            \r\n            setCategories( cats => [inputValue, ...cats ])\r\n            setInputValue('')\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"   \r\n                value={ inputValue }       \r\n                onChange={ handleInputChange }  \r\n            />\r\n        </form>\r\n    );\r\n\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n\r\n    //console.log(id, title, url)\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p>\r\n                { title }\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n    export const getGifs = async ( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&api_key=8euSqkn57zSOMY3ImooMPd767ctbMsUR&limit=10`;\r\n\r\n        const resp = await fetch(url);\r\n\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map((img) => {\r\n          return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n          };\r\n        });\r\n\r\n        return gifs;\r\n    }\r\n   \r\n","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n\r\n    // useEffect(() => {\r\n\r\n    //     getGifs( category )\r\n    //         .then( imgs => setImages( imgs ))\r\n    // }, [category]);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            { loading && <p>Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n        \r\n                {\r\n                    images.map( img => \r\n                        <GifGridItem \r\n                            key={ img.id } \r\n                            { ...img }\r\n                        /> \r\n                    )\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    getGifs( category )\r\n        .then((imgs) => {\r\n\r\n            setTimeout( () => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n\r\n            }, 3000);\r\n\r\n\r\n        })\r\n\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n            categories.map( category => \r\n                <GifGrid key={category} category={category} />\r\n            )\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}